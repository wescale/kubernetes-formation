version: '3'
services:

  ## Databases
  mongo:
    image: "mongo:4"
    labels:
    - "traefik.enable=false"

  redis:
    image: "redis"
    labels:
    - "traefik.enable=false"


  ## APIs
  api-cart:
    image: "europe-west1-docker.pkg.dev/wsc-kubernetes-training-0/microservices-demo/cart-service:1.0.0"
    deploy:
      replicas: 2
    environment:
      REDIS_URI: "redis://redis"
    labels:
      - "traefik.http.routers.api-cart.rule=Host(`api-cart.docker.local`)"
    depends_on:
      - redis

  api-article:
    image: "europe-west1-docker.pkg.dev/wsc-kubernetes-training-0/microservices-demo/article-service:1.0.0"
    deploy:
      replicas: 2
    environment:
      MONGODB_URI: "mongodb://mongo"
    labels:
      - "traefik.http.routers.api-article.rule=Host(`api-article.docker.local`)"
    depends_on:
      - mongo

  ## Fronts
  front-admin:
    image: "europe-west1-docker.pkg.dev/wsc-kubernetes-training-0/microservices-demo/front-admin:1.0.0"
    deploy:
      replicas: 2
    labels:
      - "traefik.http.routers.front-admin.rule=Host(`front-admin.docker.local`)"

  front-user:
    image: "europe-west1-docker.pkg.dev/wsc-kubernetes-training-0/microservices-demo/front-user:1.0.0"
    deploy:
      replicas: 2
    labels:
      - "traefik.http.routers.front-user.rule=Host(`front-user.docker.local`)"


  # Test
  test:
    build:
      context: ../webservice-test
    labels:
      - "traefik.http.routers.testt.rule=Host(`test.docker.local`)"

networks:
  web:
    external: true
    name: traefik_webgateway
