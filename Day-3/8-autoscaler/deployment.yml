apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:7
        ports:
        - containerPort: 27017
          name: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database
              key: password
        volumeMounts:
        - mountPath: /data/db
          name: mongo-volume-1
      volumes:
      - emptyDir: {}
        name: mongo-volume-1
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    name: default
    targetPort: mongo

---
apiVersion: v1
kind: Secret
metadata:
  name: database 
type: Opaque
data:
  password: S3ViZXJuZXRlc1RyYWluaW5n
---
kind: Deployment
apiVersion:	apps/v1
metadata:
  name: article-service
spec:
  replicas: 1
  selector:
   matchLabels:
    app.kubernetes.io/name: article-service
  minReadySeconds: 20
  template:
    metadata:
      labels:
        app.kubernetes.io/name: article-service
    spec:
      containers:
      - name: article-service
        image: europe-west1-docker.pkg.dev/wsc-kubernetes-training-0/microservices-demo/article-service:1.0.0
        env:
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: database
          - name: MONGODB_URI
            value: mongodb://root:$(MONGODB_PASSWORD)@mongodb:27017
              
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 8080
      terminationGracePeriodSeconds: 1

---
kind: Service
apiVersion: v1
metadata:
  name: article-svc
spec:
  selector:
    app.kubernetes.io/name: article-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: NodePort
